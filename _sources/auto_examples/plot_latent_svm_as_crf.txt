

.. _plot_latent_svm_as_crf.py:


================================================
Latent SVM for odd vs. even digit classification
================================================
A Latent CRF with one node is the same as a latent multiclass SVM
Using the latent variables, we can learn non-linear models. This is the
same as a simple Latent SVM model. It would obviously be more effiencent
to implement a special case for Latent SVMs so we don't have to run an
inference procedure.

This example uses the scikit-learn digit classification dataset, but poses
the problem as a binary one, discriminating between even and odd digits.



.. image:: images/plot_latent_svm_as_crf_1.png
    :align: center


**Script output**::

  Training n-slack dual structural SVM
  no additional constraints
  LATENT SVM ITERATION 0
  Training n-slack dual structural SVM
  objective converged.
  LATENT SVM ITERATION 1
  changes in H: 63
  Training n-slack dual structural SVM
  objective converged.
  Score with binary SVM:
  Train: 0.93
  Test: 0.92
  Score with latent SVM:
  Train: 1.00
  Test: 0.98
  Latent class counts: array([ 71,  96,  85,  97,  96,  76, 183,  95,  86,  14])



**Python source code:** :download:`plot_latent_svm_as_crf.py <plot_latent_svm_as_crf.py>`

.. literalinclude:: plot_latent_svm_as_crf.py
    :lines: 14-

**Total running time of the example:**  60.89 seconds
    